import ProductItem from '@/components/ProductItem'
import { ProductContext } from '@/components/State/ProductContext'
import { Box, CircularProgress, Grid, Paper, Stack, TextField, Typography } from '@mui/material'
import Head from 'next/head'
import { useContext, useEffect, useState } from 'react'


export default function Home() {
  const {phrase, setPhrase} = useContext(ProductContext)
  const [products, setProducts]=useState([])
  const [isLoading, setIsLoading] = useState(true)

  const categoriesNames = [...new Set(products.map(p=>p.category))]



  const getAllProductsQuery = async () => {
      await fetch("api/products")
        .then((response) => response.json())
        .then((json) => {
          setProducts(json)
          setIsLoading(false)
        });
  };

  useEffect(()=>{
    getAllProductsQuery()
  },[])

  if(isLoading) {
    return <CircularProgress />
  } else {

  return (
    <>
      <Head>
        <title>Market</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

<Paper sx={{mt:7, mx:-1, py:4, px:10}}>
        
    <Stack>
        <TextField type="text" value={phrase} onChange={(e)=>setPhrase(e.target.value)} placeholder='search for products...' />
    </Stack>
        
        <Grid container alignItems="center" justifyContent="center">

            {categoriesNames.map(categoryName=> (
            <Box key={categoryName}>
                {products.find(p=>p.category === categoryName && 
                  p.productName.toLowerCase().includes(phrase.toLowerCase()))  && (
                <>
                    <Typography variant="overline">{categoryName}</Typography>
                    <Grid item>
                        <Grid container spacing={3} alignItems="center" justifyContent="center">
                        {products.filter(p=>p.category === categoryName && p.productName.toLowerCase().includes(phrase.toLowerCase())).map(product=>(
                        <Grid item key={product._id} >
                            <ProductItem product={product} />
                        </Grid>
                        ))}
                        </Grid>
                    </Grid>
                </>
                )}
            </Box>
            ))}

        </Grid>
</Paper> 

    </>
  )
}
}

// export async function getServerSideProps(){
//   await initMongoose();

//   const page=1, limit=5; 
//   const products = await findAllProductsQuery()
//   // const products = await findAllProducts();
  
//   return {
//     props: {
//       products: JSON.parse(JSON.stringify(products))
//     }
//   }
// }
